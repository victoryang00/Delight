#![feature(test)]

extern crate test;
extern crate delight_book;

use delight_book::chapter7::*;

#[bench]
fn bench_transpose8(b: &mut test::Bencher) {
    let test = vec![vec![0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], vec![0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
                    vec![0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01], vec![0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01],
                    vec![0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00], vec![0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10],
                    vec![0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00], vec![0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00],
                    vec![0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00], vec![0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00],
                    vec![0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00], vec![0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00],
                    vec![0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55], vec![0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF],
                    vec![0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA], vec![0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00],
                    vec![0x7F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00], vec![0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE],
                    vec![0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00], vec![0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0],
                    vec![0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF], vec![0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F],
                    vec![0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF], vec![0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF], ];


    b.iter(|| {
        let n = test.len() / 8;
        for i in (0..n).step_by(2) {
        }
    });
}